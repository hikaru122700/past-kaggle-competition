{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceType":"competition","sourceId":88046,"databundleVersionId":10229277},{"sourceType":"datasetVersion","sourceId":10327198,"datasetId":4581967,"databundleVersionId":10633860},{"sourceType":"modelInstanceVersion","sourceId":104492,"databundleVersionId":9473649,"modelInstanceId":72255},{"sourceType":"kernelVersion","sourceId":214761119}],"dockerImageVersionId":30787,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"print(\"notebook started..\")\n!pip install -q -U transformers --no-index --find-links /kaggle/input/hf-libraries/transformers\n!pip install -q -U accelerate --no-index --find-links /kaggle/input/hf-libraries/accelerate\n!pip install -q -U bitsandbytes --no-index --find-links /kaggle/input/hf-libraries/bitsandbytes\nprint(\"pip installs done!\")\n\nimport numpy as np\nimport pandas as pd\nimport random\nimport math\n\nfrom collections import OrderedDict\nfrom math import exp\n\nimport torch.nn.functional as F\n\nfrom tqdm.auto import tqdm","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:38:44.103792Z","iopub.execute_input":"2024-12-29T16:38:44.104105Z","iopub.status.idle":"2024-12-29T16:39:24.690033Z","shell.execute_reply.started":"2024-12-29T16:38:44.104076Z","shell.execute_reply":"2024-12-29T16:39:24.689345Z"}},"outputs":[{"name":"stdout","text":"notebook started..\npip installs done!\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# Reload prior submission.csv and optimize from that!!!\n* Set `reuse_last_submission = False` to start fresh\n* Specify any samples we don't think need further optimization\n* Specify any samples we want to fully shuffle between optimization rounds (stuck at local optimum)","metadata":{}},{"cell_type":"code","source":"# Set to False to do a \"clean\" run\nreuse_last_submission = True\n\nif reuse_last_submission:\n    samples = pd.read_csv(\"/kaggle/input/santa-best-code/submission.csv\")    \nelse:\n    samples = pd.read_csv(\"/kaggle/input/santa-2024/sample_submission.csv\")\n\n# If we think some items are well-optimized - including them here will skip them\nskip = [0,1,2,4,5]\n\n# If some samples are badly stuck at local optimum - we fully shuffle between rounds\nshuffle_between_cycles = [3]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:24.691427Z","iopub.execute_input":"2024-12-29T16:39:24.691782Z","iopub.status.idle":"2024-12-29T16:39:24.712958Z","shell.execute_reply.started":"2024-12-29T16:39:24.691756Z","shell.execute_reply":"2024-12-29T16:39:24.712387Z"}},"outputs":[],"execution_count":2},{"cell_type":"markdown","source":"# Sorting sample 6 -[StopWords First]\n* Borrowing some help from...\n  \n## https://www.kaggle.com/code/asalhi/sorting-sample-6-stopwords-first","metadata":{}},{"cell_type":"code","source":"#from nltk.corpus import stopwords\n#import nltk\n#import numpy as np\n\n# Download stopwords if needed\n#nltk.download('stopwords')\n#stop_words = set(stopwords.words('english'))\n\n#def custom_sort(text):\n#    words = text.split()\n#    stop_words_in_text = sorted([word for word in words if word.lower() in stop_words])\n#    other_words = sorted([word for word in words if word.lower() not in stop_words])\n#    return \" \".join(stop_words_in_text + other_words)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:24.713995Z","iopub.execute_input":"2024-12-29T16:39:24.714582Z","iopub.status.idle":"2024-12-29T16:39:24.718508Z","shell.execute_reply.started":"2024-12-29T16:39:24.714544Z","shell.execute_reply":"2024-12-29T16:39:24.717742Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# Apply the sorting to sample 2 (index 1)\n#samples.loc[1, \"text\"] = custom_sort(samples.loc[1, \"text\"])\nsamples.loc[1,\"text\"] = \"reindeer sleep walk the night and drive mistletoe scrooge laugh gingerbread bake chimney elf jump ornament give family advent fireplace\"\n#\"reindeer mistletoe ornament gingerbread bake the night walk and sleep scrooge drive fireplace chimney jump elf laugh give family advent\"\n#\"advent and bake chimney drive elf family fireplace gingerbread give jump laugh mistletoe night ornament reindeer scrooge sleep the walk\"\n#\"walk the reindeer ornament scrooge sleep night mistletoe laugh jump give gingerbread fireplace family elf drive chimney bake and advent\"\n#\"reindeer walk gingerbread bake the night and sleep scrooge drive chimney jump elf laugh mistletoe give family advent fireplace ornament\"\n#reindeer jump walk gingerbread bake the night and sleep scrooge drive elf laugh mistletoe give family advent fireplace chimney ornament","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:24.720695Z","iopub.execute_input":"2024-12-29T16:39:24.721293Z","iopub.status.idle":"2024-12-29T16:39:24.735613Z","shell.execute_reply.started":"2024-12-29T16:39:24.721254Z","shell.execute_reply":"2024-12-29T16:39:24.734906Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"# Batch-enabled scorer\n* Re-enabled 8-bit quantization\n* Make use of T4x2 setup\n* Credit: https://www.kaggle.com/code/cdeotte/brute-force-first-sample-perplexity-470","metadata":{}},{"cell_type":"code","source":"class LRUCache:\n    def __init__(self, capacity=10**11):\n        self.capacity = capacity\n        self.cache = OrderedDict()\n\n    def get(self, key):\n        if key in self.cache:\n            self.cache.move_to_end(key)\n            return self.cache[key]\n        return None\n\n    def set(self, key, value):\n        self.cache[key] = value\n        self.cache.move_to_end(key)\n        if len(self.cache) > self.capacity:\n            self.cache.popitem(last=False)\n\n    def __len__(self):\n        return len(self.cache)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:24.736634Z","iopub.execute_input":"2024-12-29T16:39:24.737314Z","iopub.status.idle":"2024-12-29T16:39:24.749359Z","shell.execute_reply.started":"2024-12-29T16:39:24.737276Z","shell.execute_reply":"2024-12-29T16:39:24.748507Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"import gc\nimport os\nfrom math import exp\nfrom collections import Counter\nfrom typing import List, Optional, Union\n\nimport numpy as np\nimport pandas as pd\nimport transformers\nimport torch\n\nos.environ['OMP_NUM_THREADS'] = '1'\nos.environ['TOKENIZERS_PARALLELISM'] = 'false'\nPAD_TOKEN_LABEL_ID = torch.nn.CrossEntropyLoss().ignore_index\nDEVICE = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n\n\nclass PerplexityCalculator:\n    model_kwargs = {\n        \"attn_implementation\": \"sdpa\",\n        \"device_map\": \"auto\",\n        \"torch_dtype\": torch.float16,\n    }\n    device = torch.device('cuda')\n\n    def __init__(self,  model_path: str = \"/kaggle/input/gemma-2/transformers/gemma-2-9b/2\", capacity=10**11):\n        self.tokenizer = transformers.AutoTokenizer.from_pretrained(model_path, padding_side=\"right\")\n        self.model = transformers.AutoModelForCausalLM.from_pretrained(model_path, **self.model_kwargs)\n        self.loss_fct = torch.nn.CrossEntropyLoss(reduction='none')\n        self.pad_token_label_id = self.loss_fct.ignore_index\n\n        self.model.eval()\n        self.cache = LRUCache(capacity=capacity)\n\n\n    def get_perplexity(self, input_texts, batch_size=128, use_cache=True, verbose=False):\n        single_input = isinstance(input_texts, str)\n        input_texts = [input_texts] if single_input else input_texts\n        \n        results = [None] * len(input_texts)\n        \n        if use_cache:\n            text_to_process = []\n            for i, text in enumerate(input_texts):\n                cached_val = self.cache.get(text)\n                if cached_val is not None:\n                    results[i] = cached_val\n                else:\n                    text_to_process.append(text)\n        else:\n            text_to_process = input_texts.copy()\n\n        loss_list = []\n        batches = len(text_to_process)//batch_size + (len(text_to_process)%batch_size != 0)\n        pbar = range(batches)\n\n        if verbose and batches:\n            pbar = tqdm(range(batches))\n\n        for j in pbar:\n\n            a = j*batch_size\n            b = (j+1)*batch_size\n            input_batch = text_to_process[a:b]\n\n            with torch.no_grad():\n\n                # Explicitly add sequence boundary tokens to the text\n                text_with_special = [f\"{self.tokenizer.bos_token}{text}{self.tokenizer.eos_token}\" for text in input_batch]\n\n                # Tokenize\n                model_inputs = self.tokenizer(\n                    text_with_special,\n                    return_tensors='pt',\n                    add_special_tokens=False,\n                    padding=True,\n                )\n\n                if 'token_type_ids' in model_inputs:\n                    model_inputs.pop('token_type_ids')\n\n                model_inputs = {k: v.to(self.device ) for k, v in model_inputs.items()}\n\n                # Get model output\n                output = self.model(**model_inputs, use_cache=False)\n                logits = output['logits']\n\n                label = model_inputs['input_ids']\n                label[label == self.tokenizer.pad_token_id] = self.pad_token_label_id\n\n                # Shift logits and labels for calculating loss\n                shift_logits = logits[..., :-1, :].contiguous()  # Drop last prediction\n                shift_labels = label[..., 1:].contiguous()  # Drop first input\n\n                # Calculate token-wise loss\n                loss = self.loss_fct(\n                    shift_logits.view(-1, shift_logits.size(-1)),\n                    shift_labels.view(-1)\n                )\n\n                loss = loss.view(len(logits), -1)\n                valid_length = (shift_labels != self.pad_token_label_id).sum(dim=-1)\n                loss = torch.sum(loss, -1) / valid_length\n\n                loss_list += loss.cpu().tolist()\n\n        ppl = [exp(i) for i in loss_list]\n\n        index_ppl = 0\n        for index_el, el in enumerate(results):\n            if el is None:\n                results[index_el] = ppl[index_ppl]\n                self.cache.set(text_to_process[index_ppl], ppl[index_ppl])\n                index_ppl += 1\n        return results[0] if single_input else results","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:24.750704Z","iopub.execute_input":"2024-12-29T16:39:24.751058Z","iopub.status.idle":"2024-12-29T16:39:25.188531Z","shell.execute_reply.started":"2024-12-29T16:39:24.751023Z","shell.execute_reply":"2024-12-29T16:39:25.187830Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"# Load custom scorer","metadata":{}},{"cell_type":"code","source":"#gemma-2-9b (competition scoring metric)\nscorer = PerplexityCalculator('/kaggle/input/gemma-2/transformers/gemma-2-9b/2')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:39:25.189526Z","iopub.execute_input":"2024-12-29T16:39:25.189884Z","iopub.status.idle":"2024-12-29T16:42:10.890689Z","shell.execute_reply.started":"2024-12-29T16:39:25.189857Z","shell.execute_reply":"2024-12-29T16:42:10.889975Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Loading checkpoint shards:   0%|          | 0/8 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"50bd6f83e5424a78ae799e3989f6b086"}},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"# Get our starting scores\n* On initial dataset scorer returns some NaN's - we'll account for that..\n* Since we've re-run this notebook a few times - further re-runs may not improve the score much...","metadata":{}},{"cell_type":"code","source":"%%time\n# Get actual mean value \nscores = []\nfor row in range(len(samples)):\n    score = scorer.get_perplexity(samples.iloc[row].text, batch_size=2, use_cache=True, verbose=False)\n    print(samples.iloc[row].text)\n    print(f\"Score: {score:.2f}\\n\")\n    scores.append(score)\n\nprint(f\"Starting mean score: {np.mean(scores):.2f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:10.891868Z","iopub.execute_input":"2024-12-29T16:42:10.892876Z","iopub.status.idle":"2024-12-29T16:42:12.280383Z","shell.execute_reply.started":"2024-12-29T16:42:10.892833Z","shell.execute_reply":"2024-12-29T16:42:12.279525Z"}},"outputs":[{"name":"stdout","text":"reindeer mistletoe elf gingerbread family advent scrooge chimney fireplace ornament\nScore: 467.99\n\nreindeer sleep walk the night and drive mistletoe scrooge laugh gingerbread bake chimney elf jump ornament give family advent fireplace\nScore: 439.63\n\nsleigh yuletide beard carol cheer chimney decorations gifts grinch holiday holly jingle magi naughty nice nutcracker ornament polar workshop stocking\nScore: 297.47\n\nsleigh of the magi yuletide cheer is unwrap gifts relax and eat cheer decorations carol sing chimney visit workshop grinch holiday holly jingle naughty nice nutcracker polar beard ornament stocking\nScore: 195.85\n\nof and to in the as you that it we with from have not night season eggnog milk chocolate candy peppermint cookie fruitcake toy doll game puzzle greeting card wrapping paper bow wreath poinsettia star angel snowglobe candle fireplace wish dream believe wonder hope joy peace merry hohoho kaggle workshop\nScore: 67.68\n\nfrom and and as and have the in is it of not that the to we with you yuletide cheer advent angel bake beard believe bow candy candle carol cheer chocolate chimney cookie decorations doll dream drive eat eggnog elf family fireplace fireplace chimney fruitcake game give gifts gingerbread grinch greeting card holly hohoho holiday hope jingle jump joy kaggle laugh magi merry milk mistletoe naughty nice night nutcracker ornament ornament of the night peace peppermint polar poinsettia puzzle reindeer relax scrooge season sing sleigh sleep snowglobe star stocking toy unwrap visit walk wish wonder workshop workshop wreath wrapping paper\nScore: 33.31\n\nStarting mean score: 250.32\nCPU times: user 984 ms, sys: 54.3 ms, total: 1.04 s\nWall time: 1.38 s\n","output_type":"stream"}],"execution_count":8},{"cell_type":"markdown","source":"# Our \"Simulated Annealing\" Implementation\n\nKey parameters for this optimizer:\n\n1. Temperature progression:\n   - Starts at `temp_start=3.0`, increases by `temp_start_increase_per_cycle=1.0` each cycle\n   - Each cycle cools to `temp_end=0.2` using `cooling_rate=0.95`\n   - Runs total of `reheat_cycles=8` cycles (so final cycle starts at 10.0)\n\n2. Temperature step behavior:\n   - Makes `steps_per_temp=170` attempts at each temperature level\n   - This **results in a ~5 hour runtime** (assuming samples 0 and 5 are skipped)\n   - When improvements found, temporarily drops to `temp_end` for cycles by `low_temp_samples_after_improve`\n   - Returns to original temperature to continue cooling cycle\n\n3. Batch processing efficiency:\n   - Evaluates up to `max_batch_size=64` arrangements simultaneously\n   - Limits total words processed to `max_words_per_batch=640` to manage memory\n   - Automatically adjusts batch size based on sequence length\n\n4. Between-cycle behavior:\n   - Maintains best arrangement found across all cycles\n   - Has `shuffle_chance_between_cycles=0.0` probability of randomizing sequence\n   - Each new cycle starts at higher temperature to explore further from optimum\n\n### Understanding Temperature and Acceptance Probabilities\nAcceptance probability = exp(-delta/T), where delta is score difference and T is temperature\n\n* At max temp (10.0): +1 worse: 90% chance, +5: 61%, +10: 37%, +20: 14%\n* At starting temp (3.0): +1 worse: 72% chance, +5: 19%, +10: 4%, +20: 0.1%\n* At min temp (0.2): +1 worse: 0.67% chance, +5 or worse: ≈0%\n\nBetter-scoring arrangements are always accepted. Higher temperatures allow exploring further from current solution, while minimum temperature mainly accepts improvements.\n   \nProgress indicators:\n* `>` - found a new best score\n* `<` - accepted a worse score (for exploration)\n* `-` - rejected the new arrangement (only prints 10% of the time)\n* `x` - skipped invalid arrangement (NaN score)","metadata":{"_kg_hide-input":false}},{"cell_type":"code","source":"# ******************** mutate_sentence *********************\n# Make a small change to a list of words\n# Picks one of 5 possible mutations to the list\n# - swap 2 words\n# - remove 1 word and reinsert it at random\n# - pick 4 indices and shuffle the words at those locations\n# - remove a segment of words and reinsert it at random\n# - same as above, but flip the segment\ndef mutate_sentence(sentence_in):\n    sentence = sentence_in.copy()\n    #print('       , , ',  sentence)\n    n = len(sentence)\n   \n    if np.random.randint(100) < 80: # make a small mutation \n        if np.random.randint(100) < 33: # swap 2 words\n            i, j = random.sample(range(n), 2)\n            sentence[i], sentence[j] = sentence[j], sentence[i]\n            #print('swap',i, j,  sentence)\n            return(sentence)\n        elif  np.random.randint(100) < 50:                           # shift 1 word to another spot\n            i = np.random.choice(n) # word in slot i\n            j = np.random.choice(n) # slot j\n            t = sentence.pop(i)\n            sentence.insert(j, t)\n            #print('shift',i, j,  sentence)\n            return(sentence)\n        else:  # pick 4 random slots and permute the words in place\n            t = 4\n            p0 = random.sample(range(n), t)\n            #print(p0)\n            p1 = random.sample(p0, t)\n            #print(p1)\n            sentence[p0[0]], sentence[p0[1]], sentence[p0[2]], sentence[p0[3]] = sentence[p1[0]], sentence[p1[1]], sentence[p1[2]], sentence[p1[3]]\n            if n != len(sentence): print('I fail at math')\n            #print('       , , ',  sentence)\n        return(sentence)\n     # otherwise make a larger change - we'll move a segment\n    i, j = random.sample(range(n + 1), 2)\n    if i > j: i, j = j, i\n   \n    if np.random.randint(100) < 90:   # pick a random segment and relocate it\n        segment = sentence[i:j]\n        remains = sentence[:i]\n        if j < n: remains = remains + sentence[j:]\n        t = np.random.choice(len(remains)+ 1) # insert it here\n        sentence = remains[:t] + segment + remains[t:]\n        if n != len(sentence): print('I fail at math')\n        #print('segment',i, j,  sentence)\n        return(sentence)\n    else:            # pick a random segment, reverse it and relocate that\n        segment = sentence[i:j]\n        segment.reverse()\n        remains = sentence[:i]\n        if j < n: remains = remains + sentence[j:]\n        t = np.random.choice(len(remains)+ 1) # insert it here\n        sentence = remains[:t] + segment + remains[t:]\n        if n != len(sentence): print('mutate_sentence() has gone very wrong')\n        #print('segment',i, j,  sentence)\n        return(sentence)\n    return(sentence)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.281561Z","iopub.execute_input":"2024-12-29T16:42:12.281853Z","iopub.status.idle":"2024-12-29T16:42:12.291752Z","shell.execute_reply.started":"2024-12-29T16:42:12.281825Z","shell.execute_reply":"2024-12-29T16:42:12.290911Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"This is the mutation function used for SA:","metadata":{}},{"cell_type":"code","source":"def mutate(child):\n    # 候補リスト\n    mutation_types = ['swap2', 'swap3', 'swap', 'sort', 'sort2', 'shift', 'shiftlarge', 'inversion', 'scramble']\n    \n    # インデックスが若いほど大きい重みを付ける\n    # 例: [9, 8, 7, 6, 5, 4, 3, 2, 1] のような降順\n    n = len(mutation_types)\n    weights = [1 for i in range(n)]  # 9,8,7,...,1\n    \n    # 重み付きで1つ選択する\n    mutation_type = random.choices(mutation_types, weights=weights, k=1)[0]\n    #child = child.split() # Convert child to a list of words \n    n = len(child) \n    if mutation_type == \"swap2\":\n        i,j = random.sample(range(n),2)\n        child[i], child[j] = child[j], child[i] \n    elif mutation_type == \"swap3\":\n        i,j,k = random.sample(range(n),3)\n        child[i], child[j], child[k] = child[j], child[k], child[i] \n    elif mutation_type == 'swap': \n        #mutation_size = random.randint(1, n//3) \n        mutation_size = random.randint(1, 4)\n        for _ in range(mutation_size): \n            i, j = random.sample(range(n), 2) \n            child[i], child[j] = child[j], child[i] \n    elif mutation_type == \"sort\":\n        segment_length = random.randint(3, n) \n        start = random.randint(0, n - segment_length) \n        end = start + segment_length\n        child[start:end] = sorted(child[start:end])\n    elif mutation_type == \"sort2\":\n        segment_length = random.randint(3, n) \n        start = random.randint(0, n - segment_length) \n        end = start + segment_length\n        child[start:end] = sorted(child[start:end])\n    elif mutation_type == 'shift':\n        i = np.random.choice(n) # word in slot i\n        j = np.random.choice(n) # slot j\n        t = child.pop(i)\n        child.insert(j, t)\n    elif mutation_type == 'shiftlarge':\n        i = np.random.randint(0, n-1) # word in slot i \n        k = np.random.randint(1, 4) # length of the segment to move (1 to 4) \n        j = np.random.randint(0, n-1)\n        # Ensure j is not within the segment to be moved \n        while j >= i and j <= i + k - 1: \n            j = np.random.randint(0, n-1)\n        # Extract the segment and remove it from the list \n        t = child[i:i+k] \n        del child[i:i+k] \n        # Insert the segment at the new position \n        for index, word in enumerate(t): \n            child.insert(j + index, word)\n    elif mutation_type == 'inversion': \n        segment_length = random.randint(3, 5) \n        start = random.randint(0, n - segment_length) \n        end = start + segment_length - 1\n        child[start:end + 1] = reversed(child[start:end + 1])\n    elif mutation_type == 'scramble': \n        segment_length = random.randint(3, 5) \n        start = random.randint(0, n - segment_length) \n        end = start + segment_length - 1 \n        subset = child[start:end+1] \n        random.shuffle(subset) \n        child[start:end+1] = subset \n    elif mutation_type == \"shuffle\":\n        random.shuffle(child)\n    return child #\" \".join(child)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.293888Z","iopub.execute_input":"2024-12-29T16:42:12.294140Z","iopub.status.idle":"2024-12-29T16:42:12.309122Z","shell.execute_reply.started":"2024-12-29T16:42:12.294116Z","shell.execute_reply":"2024-12-29T16:42:12.308347Z"}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"Change the parameters here:","metadata":{}},{"cell_type":"code","source":"from sortedcontainers import SortedSet, SortedList, SortedDict","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.310074Z","iopub.execute_input":"2024-12-29T16:42:12.310418Z","iopub.status.idle":"2024-12-29T16:42:12.330300Z","shell.execute_reply.started":"2024-12-29T16:42:12.310381Z","shell.execute_reply":"2024-12-29T16:42:12.329659Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"math.log(0.1)/math.log(0.8)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.331339Z","iopub.execute_input":"2024-12-29T16:42:12.331659Z","iopub.status.idle":"2024-12-29T16:42:12.337382Z","shell.execute_reply.started":"2024-12-29T16:42:12.331624Z","shell.execute_reply":"2024-12-29T16:42:12.336538Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"10.318851158516171"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"# temp_start = 1 #30 #30 #50 #3.0                      # Initial temperature for first cycle\n# temp_end = 0.1                        # Final/minimum temperature\n# reheat_cycles = 2  #8                   # Number of full heating/cooling cycles to run\n# temp_start_increase_per_cycle = 1.0 #1  # How much to increase starting temp each cycle\n# cooling_rate = 0.80 #0.95                   # Temperature reduction multiplier each step \n# steps_per_temp = 300 #170 #300 #170                   # Attempts at each temperature level\n# low_temp_samples_after_improve = steps_per_temp * 5  # Samples done at min temp after improvements (extends cycle)\n# max_batch_size = 64           # Maximum sequences to evaluate at once\n# max_words_per_batch = 640            # Total word limit per batch to manage memory\n# shuffle_chance_between_cycles = 1.0   # Probability of completely shuffling the sequence between cycles\n# max_len_text_que = 100\n# initial_trials = 10\n\n# # 空白文字で単語に分割\n# def split_into_words(char_list):\n#     words = ''.join(char_list).split(' ')  # リストを文字列に結合し、空白で分割\n#     return words\n\n\n\n# def simulated_annealing_optimize(text: str, pretext = \"\", temp_start=temp_start, temp_end=temp_end, \n#                                cooling_rate=cooling_rate, samples_per_temp=steps_per_temp, \n#                                max_batch_size=max_batch_size, max_words_per_batch=max_words_per_batch,\n#                                reheat_cycles=reheat_cycles, low_temp_samples_after_improve=low_temp_samples_after_improve, shuffle_chance_between_cycles = shuffle_chance_between_cycles, verbose=False,\n#                                 max_len_text_que = max_len_text_que, initial_trials=initial_trials):\n#     text_que = SortedSet()\n#     print(f\"text: {text}\")\n\n#     words_list = text.split()\n#     # text = f\"'{text}'\"\n#     # print(f\"text: {text}\")\n#     score = scorer.get_perplexity(text)\n#     # print(f\"words_list: {words_list}, joined_text: {' '.join(words_list)}\")\n#     text_que.add((score, tuple(words_list), temp_start))\n#     best = ''\n#     best_score = 1 << 60\n#     print(f\"これからSAでの探索を開始します.\")\n#     while len(text_que) > 0:\n#         current_score, current_tuple, current_temp = text_que.pop()\n#         current = list(current_tuple)  # リストに戻す\n        \n#         # print(f\"current:{current}\")\n#         # 単語リスト\n#         # current = split_into_words(current)\n#         current_temp *= cooling_rate\n#         print(f\"current_score: {current_score}, current: {' '.join(current)}\")\n        \n#         neighbors = []\n#         neighbor_texts = []\n#         for _ in range(max_batch_size):\n#             neighbor = current.copy()\n#             neighbor = mutate(neighbor)\n#             neighbors.append(neighbor)\n#             neighbor_texts.append(pretext + ' '.join(neighbor))\n#             # print(f\"neighbor_text: {' '.join(neighbor)}\")\n        \n#         neighbor_scores = scorer.get_perplexity(neighbor_texts, batch_size=max_batch_size, use_cache=True, verbose=False)\n#         for neighbor, neighbor_score in zip(neighbors, neighbor_scores):\n#             if math.isnan(neighbor_score):\n#                 if verbose:\n#                     print(\"x\", end=\"\", flush=True)\n#                 continue\n#             if best_score * 1.5 < neighbor_score:\n#                 continue\n#             delta = neighbor_score - current_score\n#             # if delta < 0 or random.random() < math.exp(-delta / current_temp):\n#             # 現在はランダム性が全くないので改善できそう\n            \n#             if delta < 0 or random.random() < math.exp(-delta / current_temp):\n#                 # print(f\"add_neighbor: {neighbor}\")\n#                 text_que.add((neighbor_score, tuple(neighbor), current_temp))\n#                 if best_score > neighbor_score:\n#                     best_score = neighbor_score\n#                     best = neighbor\n#                     print(f\"\\n best_score: {best_score}, {' '.join(best)}\")\n#         print(f\"len_text_que: {len(text_que)}, best_score: {best_score}\")\n#         while len(text_que) > max_len_text_que:\n#             text_que.pop()\n\n#     print(f\"best: {best}\")\n    \n#     return pretext + ' '.join(best), best_score\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.338681Z","iopub.execute_input":"2024-12-29T16:42:12.338994Z","iopub.status.idle":"2024-12-29T16:42:12.345313Z","shell.execute_reply.started":"2024-12-29T16:42:12.338960Z","shell.execute_reply":"2024-12-29T16:42:12.344643Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"for idx, row in samples.iterrows():\n    print(idx, row.text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:42:12.346248Z","iopub.execute_input":"2024-12-29T16:42:12.346511Z","iopub.status.idle":"2024-12-29T16:42:12.359019Z","shell.execute_reply.started":"2024-12-29T16:42:12.346488Z","shell.execute_reply":"2024-12-29T16:42:12.358388Z"}},"outputs":[{"name":"stdout","text":"0 reindeer mistletoe elf gingerbread family advent scrooge chimney fireplace ornament\n1 reindeer sleep walk the night and drive mistletoe scrooge laugh gingerbread bake chimney elf jump ornament give family advent fireplace\n2 sleigh yuletide beard carol cheer chimney decorations gifts grinch holiday holly jingle magi naughty nice nutcracker ornament polar workshop stocking\n3 sleigh of the magi yuletide cheer is unwrap gifts relax and eat cheer decorations carol sing chimney visit workshop grinch holiday holly jingle naughty nice nutcracker polar beard ornament stocking\n4 of and to in the as you that it we with from have not night season eggnog milk chocolate candy peppermint cookie fruitcake toy doll game puzzle greeting card wrapping paper bow wreath poinsettia star angel snowglobe candle fireplace wish dream believe wonder hope joy peace merry hohoho kaggle workshop\n5 from and and as and have the in is it of not that the to we with you yuletide cheer advent angel bake beard believe bow candy candle carol cheer chocolate chimney cookie decorations doll dream drive eat eggnog elf family fireplace fireplace chimney fruitcake game give gifts gingerbread grinch greeting card holly hohoho holiday hope jingle jump joy kaggle laugh magi merry milk mistletoe naughty nice night nutcracker ornament ornament of the night peace peppermint polar poinsettia puzzle reindeer relax scrooge season sing sleigh sleep snowglobe star stocking toy unwrap visit walk wish wonder workshop workshop wreath wrapping paper\n","output_type":"stream"}],"execution_count":14},{"cell_type":"markdown","source":"# Run and Submit!","metadata":{}},{"cell_type":"markdown","source":"Change the text to optimize here: either a full text, then use split afterwards (processing_words.split()). Or define the words, combining words which should processed together. A pretext or aftertext can also be added, it has to be added within the code (see #!!!!!!!!!!!!!!!!) and do not forget the empty space. This text has to be removed from the words and will be kept unchanged at the beginning (or end).","metadata":{}},{"cell_type":"code","source":"text = \"sleigh of holly yuletide cheer unwrap gifts eat holiday cheer relax sing carol the magi visit workshop grinch is naughty and nice decorations ornament chimney stocking nutcracker polar beard jingle\"\n\nneighbor_texts = []\nneighbor_scores = []\ncurrent = text.split()\nfor _ in tqdm(range(100)):\n    neighbor = current.copy()\n    neighbor = mutate(neighbor)\n    neighbor_texts.append(' '.join(neighbor))\n    score = scorer.get_perplexity(neighbor_texts, batch_size=1, use_cache=False, verbose=False)\n    neighbor_scores.append(score)\n\n# print(f\"score: {score}\\n {neighbor}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T16:52:00.590144Z","iopub.execute_input":"2024-12-29T16:52:00.590942Z","iopub.status.idle":"2024-12-29T17:02:20.746282Z","shell.execute_reply.started":"2024-12-29T16:52:00.590911Z","shell.execute_reply":"2024-12-29T17:02:20.745125Z"},"_kg_hide-input":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/100 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ac16a89688ad4b80badf201d57b6e436"}},"metadata":{}},{"name":"stdout","text":"score: [254.43935071813848]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'jingle', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'visit']\nscore: [254.43935071813848, 417.86409580268446]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'decorations', 'the', 'carol', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'magi', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'and', 'nice', 'decorations', 'ornament', 'naughty', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'ornament', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'cheer', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'workshop', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'and', 'beard', 'carol', 'cheer', 'chimney', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'is', 'jingle', 'magi', 'naughty', 'nice', 'nutcracker', 'ornament', 'polar', 'relax', 'sing', 'stocking', 'the', 'unwrap', 'visit', 'workshop']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'grinch', 'workshop', 'visit', 'magi', 'the', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'the', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'workshop', 'magi', 'visit', 'unwrap', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876]\n ['sleigh', 'of', 'and', 'carol', 'cheer', 'cheer', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'holly', 'is', 'magi', 'naughty', 'nice', 'ornament', 'relax', 'sing', 'the', 'unwrap', 'visit', 'workshop', 'yuletide', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'carol', 'the', 'sing', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414]\n ['sleigh', 'of', 'cheer', 'eat', 'gifts', 'holiday', 'holly', 'unwrap', 'yuletide', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'chimney', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'and', 'chimney', 'decorations', 'is', 'naughty', 'nice', 'nutcracker', 'ornament', 'polar', 'stocking', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884]\n ['sleigh', 'the', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'decorations', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'polar', 'ornament', 'chimney', 'stocking', 'nutcracker', 'of', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033]\n ['sleigh', 'of', 'gifts', 'unwrap', 'cheer', 'yuletide', 'holly', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'eat', 'gifts', 'holiday', 'unwrap', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831]\n ['ornament', 'chimney', 'sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'carol', 'sing', 'relax', 'cheer', 'holiday', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279]\n ['cheer', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'sleigh', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248]\n ['sleigh', 'and', 'beard', 'carol', 'cheer', 'cheer', 'chimney', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'holly', 'is', 'jingle', 'magi', 'naughty', 'nice', 'nutcracker', 'of', 'ornament', 'polar', 'relax', 'sing', 'stocking', 'the', 'unwrap', 'visit', 'workshop', 'yuletide']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314]\n ['sleigh', 'of', 'cheer', 'unwrap', 'yuletide', 'holly', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923]\n ['and', 'of', 'holly', 'yuletide', 'cheer', 'jingle', 'ornament', 'eat', 'holiday', 'cheer', 'the', 'sing', 'carol', 'relax', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'sleigh', 'nice', 'decorations', 'gifts', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'unwrap']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'nice', 'naughty', 'is', 'and', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'cheer', 'relax', 'holiday', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'the', 'carol', 'visit', 'magi', 'sing', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'relax', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'relax', 'eat', 'holiday', 'cheer', 'gifts', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'sing', 'carol', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'and', 'carol', 'cheer', 'chimney', 'decorations', 'grinch', 'is', 'magi', 'naughty', 'nice', 'nutcracker', 'ornament', 'polar', 'relax', 'sing', 'stocking', 'the', 'visit', 'workshop', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598]\n ['sleigh', 'sing', 'holly', 'grinch', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'naughty', 'of', 'carol', 'polar', 'magi', 'visit', 'workshop', 'yuletide', 'is', 'relax', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'the', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'beard', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'cheer', 'relax', 'holiday', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447]\n ['yuletide', 'of', 'holly', 'sleigh', 'cheer', 'nice', 'gifts', 'eat', 'holiday', 'cheer', 'grinch', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'relax', 'is', 'naughty', 'and', 'unwrap', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'beard', 'polar', 'nutcracker', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'polar', 'beard', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665]\n ['and', 'beard', 'carol', 'cheer', 'cheer', 'chimney', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'holly', 'is', 'jingle', 'magi', 'naughty', 'nice', 'nutcracker', 'of', 'ornament', 'polar', 'relax', 'sing', 'sleigh', 'stocking', 'the', 'unwrap', 'visit', 'workshop', 'yuletide']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'and', 'beard', 'carol', 'chimney', 'decorations', 'grinch', 'is', 'jingle', 'magi', 'naughty', 'nice', 'nutcracker', 'ornament', 'polar', 'stocking', 'the', 'visit', 'workshop']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'grinch', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'naughty', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'gifts', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'jingle', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'magi', 'the', 'carol', 'sing', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908]\n ['sleigh', 'of', 'holly', 'cheer', 'cheer', 'eat', 'gifts', 'holiday', 'unwrap', 'yuletide', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034]\n ['sleigh', 'carol', 'cheer', 'cheer', 'eat', 'gifts', 'holiday', 'holly', 'magi', 'of', 'relax', 'sing', 'the', 'unwrap', 'visit', 'yuletide', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'grinch', 'the', 'magi', 'visit', 'workshop', 'carol', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'polar', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'carol', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416]\n ['holly', 'sleigh', 'of', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424]\n ['sleigh', 'of', 'holly', 'carol', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'yuletide', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'sing', 'relax', 'nice', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'cheer', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317]\n ['sleigh', 'of', 'holly', 'workshop', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'cheer', 'relax', 'sing', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051]\n ['and', 'carol', 'cheer', 'cheer', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'holly', 'is', 'magi', 'naughty', 'nice', 'of', 'ornament', 'relax', 'sing', 'sleigh', 'the', 'unwrap', 'visit', 'workshop', 'yuletide', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'carol', 'sing', 'relax', 'cheer', 'holiday', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507]\n ['sleigh', 'of', 'holly', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'yuletide', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'jingle', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'naughty']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'carol', 'cheer', 'holiday', 'magi', 'relax', 'sing', 'the', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616]\n ['sleigh', 'of', 'holly', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle', 'yuletide', 'cheer', 'unwrap']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'the', 'magi', 'carol', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942]\n ['sleigh', 'of', 'holly', 'sing', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'yuletide', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236]\n ['sleigh', 'of', 'carol', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'visit', 'the', 'nutcracker', 'holly', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'magi', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'and', 'beard', 'carol', 'cheer', 'chimney', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'is', 'jingle', 'magi', 'naughty', 'nice', 'nutcracker', 'ornament', 'polar', 'relax', 'sing', 'stocking', 'the', 'unwrap', 'visit', 'workshop']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701]\n ['sleigh', 'eat', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'of', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'and', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'stocking', 'chimney', 'ornament', 'decorations', 'nice', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339]\n ['sleigh', 'of', 'holly', 'yuletide', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'cheer', 'unwrap', 'gifts', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'visit', 'carol', 'the', 'magi', 'sing', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'chimney', 'ornament', 'decorations', 'nice', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127]\n ['sleigh', 'of', 'holly', 'eat', 'gifts', 'unwrap', 'cheer', 'yuletide', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193]\n ['sleigh', 'cheer', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'ornament', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'of', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093]\n ['sleigh', 'of', 'holly', 'ornament', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115]\n ['sleigh', 'of', 'holly', 'nice', 'cheer', 'unwrap', 'gifts', 'eat', 'carol', 'cheer', 'relax', 'sing', 'holiday', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'yuletide', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781]\n ['sleigh', 'of', 'cheer', 'yuletide', 'holly', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094]\n ['sleigh', 'of', 'holly', 'yuletide', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'cheer', 'unwrap', 'gifts', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'carol', 'cheer', 'eat', 'gifts', 'holiday', 'magi', 'relax', 'sing', 'the', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle', 'workshop', 'grinch']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088]\n ['sleigh', 'of', 'polar', 'holly', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'chimney', 'stocking', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'visit', 'workshop', 'nutcracker', 'yuletide', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'jingle', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'eat', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'and']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'nice', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339]\n ['sleigh', 'of', 'decorations', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'visit', 'the', 'magi', 'carol', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'holly', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821]\n ['sleigh', 'holly', 'of', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'polar', 'nutcracker', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172]\n ['nice', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'jingle', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'sleigh', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'gifts', 'beard', 'polar']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'relax', 'gifts', 'eat', 'holiday', 'cheer', 'unwrap', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'naughty', 'is', 'grinch', 'workshop', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317]\n ['sleigh', 'of', 'holly', 'workshop', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507]\n ['holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'sleigh', 'of', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962]\n ['sleigh', 'of', 'and', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'holly', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'the', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'unwrap', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723]\n ['sleigh', 'of', 'holly', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'yuletide', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761]\n ['sleigh', 'of', 'chimney', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'magi', 'sing', 'carol', 'the', 'relax', 'visit', 'workshop', 'grinch', 'nice', 'naughty', 'and', 'holly', 'decorations', 'ornament', 'is', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974]\n ['sleigh', 'and', 'beard', 'carol', 'cheer', 'cheer', 'chimney', 'decorations', 'eat', 'gifts', 'grinch', 'holiday', 'holly', 'is', 'magi', 'naughty', 'nice', 'nutcracker', 'of', 'ornament', 'polar', 'relax', 'sing', 'stocking', 'the', 'unwrap', 'visit', 'workshop', 'yuletide', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'grinch', 'workshop', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'magi', 'the', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'magi', 'cheer', 'relax', 'sing', 'carol', 'the', 'nutcracker', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'holiday', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'stocking', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'workshop', 'chimney', 'ornament', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'grinch', 'workshop', 'visit', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'the', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'gifts', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867, 486.6280141983472]\n ['sleigh', 'nice', 'decorations', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867, 486.6280141983472, 363.0466179050314]\n ['sleigh', 'of', 'holly', 'yuletide', 'beard', 'unwrap', 'cheer', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'gifts', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867, 486.6280141983472, 363.0466179050314, 316.65488817567297]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'magi', 'the', 'carol', 'sing', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'jingle']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867, 486.6280141983472, 363.0466179050314, 316.65488817567297, 288.31755666558627]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'jingle', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'nutcracker', 'polar', 'beard', 'magi']\nscore: [254.43935071813848, 417.86409580268446, 306.91244147925255, 370.20707083592094, 610.368272250772, 361.6312332766962, 502.07524555352444, 593.9046294555876, 288.31755666558627, 462.53339048974414, 274.0419645628891, 299.8028224298701, 397.1742097789884, 320.3875157950033, 370.20707083592094, 507.9935496710831, 254.43935071813848, 605.6183486721279, 419.4995696321248, 363.0466179050314, 2163.9434338520923, 297.46973835596765, 220.19890466437903, 419.4995696321248, 281.63868765896893, 276.1913023296018, 330.5577072665093, 854.0587625261516, 1458.4890039610598, 256.43494327896633, 220.19890466437903, 1223.3826929169447, 246.61107487460225, 310.5302282198318, 615.1554499417665, 724.8302576041393, 266.6501501115634, 573.3879280792671, 228.07795992374852, 316.65488817567297, 460.7301436924908, 198.15756558346607, 730.5151717727034, 312.9657469853004, 357.4181017943673, 350.5050099164416, 343.72562933929424, 502.07524555352444, 319.1384432445317, 412.9958316281291, 1079.6314371748051, 254.43935071813848, 302.15420510895507, 370.20707083592094, 446.5549673918236, 436.21053271376616, 254.43935071813848, 314.1906602856942, 446.5549673918236, 610.368272250772, 299.8028224298701, 260.4732060371668, 370.20707083592094, 429.4477152409339, 304.5240299109616, 327.98528678000895, 358.8169966923127, 515.9932840552193, 330.5577072665093, 637.1666574479115, 289.4459996766781, 370.20707083592094, 540.7563187908823, 268.7415131590023, 530.2971447966088, 368.76377024718164, 373.11064087900144, 429.4477152409339, 345.0709334152821, 1522.524360828172, 329.26898489707213, 341.05073527023916, 319.1384432445317, 302.15420510895507, 361.6312332766962, 397.1742097789884, 295.1548104863723, 986.863024334761, 484.7308313654974, 252.45928798182638, 262.51612271179147, 331.8514735526883, 290.5788592888401, 274.0419645628891, 406.59292473597867, 486.6280141983472, 363.0466179050314, 316.65488817567297, 288.31755666558627, 242.7877245401199]\n ['sleigh', 'of', 'holly', 'yuletide', 'cheer', 'unwrap', 'gifts', 'eat', 'holiday', 'cheer', 'relax', 'sing', 'carol', 'the', 'magi', 'visit', 'workshop', 'grinch', 'is', 'naughty', 'and', 'nice', 'decorations', 'ornament', 'chimney', 'stocking', 'polar', 'nutcracker', 'beard', 'jingle']\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[24], line 13\u001b[0m\n\u001b[1;32m     11\u001b[0m     neighbor_scores\u001b[38;5;241m.\u001b[39mappend(score)\n\u001b[1;32m     12\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mscore: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mscore\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mneighbor\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m---> 13\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m10\u001b[39m, \u001b[38;5;241m6\u001b[39m))\n\u001b[1;32m     14\u001b[0m sns\u001b[38;5;241m.\u001b[39mhistplot(neighbor_scores, bins\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m20\u001b[39m, kde\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mskyblue\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     15\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mNeighbor Scoresのヒストグラム\u001b[39m\u001b[38;5;124m'\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"],"ename":"NameError","evalue":"name 'plt' is not defined","output_type":"error"}],"execution_count":24},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(10, 6))\nsns.histplot(neighbor_scores, bins=50, kde=False, color='gray')\nplt.title('Neighbor Scoresのヒストグラム')\nplt.xlabel('スコア')\nplt.ylabel('頻度')\nplt.xlim(150, 500)\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-29T17:07:24.029356Z","iopub.execute_input":"2024-12-29T17:07:24.029703Z","iopub.status.idle":"2024-12-29T17:07:32.465470Z","shell.execute_reply.started":"2024-12-29T17:07:24.029673Z","shell.execute_reply":"2024-12-29T17:07:32.464567Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 38971 (\\N{CJK UNIFIED IDEOGRAPH-983B}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 24230 (\\N{CJK UNIFIED IDEOGRAPH-5EA6}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12398 (\\N{HIRAGANA LETTER NO}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12498 (\\N{KATAKANA LETTER HI}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12473 (\\N{KATAKANA LETTER SU}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12488 (\\N{KATAKANA LETTER TO}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12464 (\\N{KATAKANA LETTER GU}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12521 (\\N{KATAKANA LETTER RA}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12512 (\\N{KATAKANA LETTER MU}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12467 (\\N{KATAKANA LETTER KO}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n/opt/conda/lib/python3.10/site-packages/IPython/core/pylabtools.py:152: UserWarning: Glyph 12450 (\\N{KATAKANA LETTER A}) missing from current font.\n  fig.canvas.print_figure(bytes_io, **kw)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"submission = pd.DataFrame(columns=['id', 'text'])\nscores = []\ntexts = []\n# processing_words = ['magi yuletide cheer', 'grinch', 'carol', 'holly', 'jingle', 'naughty nice', \n#                     'nutcracker', 'polar', 'beard', 'ornament', 'stocking chimney', 'sleigh', \n#                     'holiday', 'workshop',  \n#                     'gifts', 'decorations']\n# processing_words = ['sleigh','naughty nice', 'grinch','gifts','magi','yuletide', 'workshop', 'nutcracker',\n#                     'holiday','holly jingle', 'carol', \n#                     'stocking', 'chimney', 'polar', 'beard', 'ornament',  \n#                     'decorations']\n# processing_words = ['sleigh of the magi', 'is', 'yuletide', 'cheer', 'unwrap gifts','relax', \n#                     'and', 'eat', 'holiday', 'decorations', 'holly jingle',\n#                     'carol','cheer', 'sing', 'chimney', 'visit', 'workshop',\n#                     'grinch naughty nice polar beard nutcracker ornament stocking']\n#processing_words = [\"from\", \"and\", \"as\", \"have\", \"in\", \"not\", \"it\", \"of\", \"that\", \"the\", \"to\", \"we\", \"with\", \"you\", \n#\"season greeting angel believe bow card candle candy chocolate cookie doll dream eggnog fireplace fruitcake game hohoho hope joy kaggle merry milk night peace peppermint poinsettia puzzle snowglobe star toy wreath wish workshop wonder wrapping paper\"]\n#processing_words = ['wreath', 'it', 'have', 'merry', 'season', 'hohoho', 'and to you', 'from the star', 'of', 'wonder', 'workshop', 'that night', 'not with', 'joy', \n#                    'as we', 'believe in', 'hope', 'peace', 'milk', 'cookie', 'eggnog', 'fruitcake', 'chocolate', 'candy', 'peppermint', 'candle', 'snowglobe', \n#                    'angel', 'poinsettia', 'wrapping paper', 'bow', 'greeting card', 'wish', 'dream', 'fireplace', 'kaggle', 'toy', 'doll', 'game', 'puzzle']\n# processing_words = [#\"from and as have in not it of that the to we with you season\",\n#                      'joy', 'wonder', 'dream', 'believe', 'wish', 'hope', 'peace', 'star', 'night',\n#                     'candle', 'wreath', 'angel', 'snowglobe', 'fireplace', 'poinsettia', 'candy',\n#                     'peppermint', 'chocolate', 'cookie', 'milk', 'eggnog', 'fruitcake',\n#                     \"greeting card wrapping paper bow toy doll game puzzle merry hohoho kaggle workshop\"]\n# processing_words = ['of', 'and', 'to', 'and', 'in', 'the', 'as', 'and', 'is', \n#                     'that', 'the', 'it', 'we', 'with', 'from', 'have', 'not', \n#                     'you yuletide cheer advent angel bake beard believe bow candy candle carol cheer chocolate chimney cookie decorations doll dream drive', \n#                     'eat eggnog elf family fireplace fireplace chimney fruitcake game give gifts gingerbread grinch greeting card', \n#                     'holly hohoho holiday hope jingle jump joy kaggle laugh magi merry milk mistletoe naughty nice night nutcracker', 'ornament ornament', 'of', 'the', \n#                     'night peace peppermint polar poinsettia puzzle reindeer relax scrooge season sing sleigh sleep snowglobe star stocking toy unwrap visit walk wish wonder workshop workshop wreath wrapping paper'\n#                     ]\n# processing_words = \"and and as have the in is it of the to we with you yuletide cheer advent and angel bake beard believe bow candy candle carol cheer chocolate chimney cookie decorations doll dream drive eat eggnog elf from family fireplace fireplace chimney fruitcake game give gifts gingerbread grinch greeting card holly hohoho holiday hope jingle jump joy kaggle laugh magi merry milk mistletoe naughty nice nutcracker not that night ornament ornament of the night peace peppermint polar poinsettia puzzle reindeer relax scrooge season sing sleigh sleep snowglobe star stocking toy unwrap visit walk wish wonder workshop workshop wreath wrapping paper\"\n# processing_words = \"and is of the sleigh yuletide beard cheer chimney decorations grinch holiday holly jingle magi naughty nice nutcracker ornament polar stocking workshop cheer carol eat sing relax visit unwrap gifts \"\n# processing_words = \"sleigh of the magi yuletide cheer is eat relax and unwrap gifts cheer grinch holiday holly jingle naughty nice nutcracker ornament polar beard workshop visit chimney stocking carol sing decorations\"\n# processing_words = [\"sleigh of the magi yuletide cheer is\", 'eat relax and unwrap gifts', 'cheer', 'grinch holiday holly jingle naughty nice nutcracker', 'ornament', 'polar', 'beard', 'visit workshop', 'chimney', 'stocking', 'carol sing', \"decorations\"]\n# processing_words = ['of', 'magi', 'yuletide cheer', 'and', 'unwrap', 'gifts', 'sing', 'carol','the','holly',  'jingle', 'eat', 'holiday', 'visit workshop', 'grinch', 'is', 'naughty', \n#                     'nice','relax','stocking', 'chimney', 'decorations', 'ornament', 'cheer', 'nutcracker', 'polar', 'beard']\n#processing_words = \"season joy wonder dream believe in wish and to you hope peace from the star of that night candle wreath angel snowglobe fireplace poinsettia candy peppermint chocolate cookie milk not eggnog fruitcake greeting card wrapping paper bow it toy doll game puzzle have merry hohoho as we with kaggle workshop\"\n#processing_words = \"magi yuletide grinch holiday cheer gifts decorations ornament stocking holly jingle sleigh carol naughty nice polar beard workshop chimney nutcracker\"\n#processing_words = \"sleigh of the magi yuletide cheer unwrap gifts relax and eat cheer carol sing holiday decorations holly jingle workshop visit grinch naughty is nice nutcracker ornament stocking chimney polar beard\"\nprocessing_words = \"grinch carol magi yuletide cheer holiday holly jingle naughty nice nutcracker polar beard ornament stocking chimney sleigh workshop gifts decorations\"\n#processing_words = processing_words.split()\n#processing_words = samples.loc[1,\"text\"].split()\n#processing_words = processing_words.split()\n#\"sleigh magi yuletide cheer gifts holiday decorations holly jingle carol chimney grinch naughty nice polar beard workshop nutcracker ornament stocking\"\n\n# Process each sample\nid_texts = {\n    3: 'sleigh yuletide is unwrap gifts of cheer eat jingle relax sing carol the magi visit workshop naughty and nice holiday holly cheer chimney grinch nutcracker polar beard ornament decorations stocking',\n    # 必要に応じて、他の id 用のテキストを追加できる\n    # たとえば 4: \"other text ...\"\n}\ntexts_id3 = [\n    \"sleigh yuletide beard carol cheer cheer chimney decorations eat gifts grinch holiday holly jingle is naughty and nice nutcracker ornament of the magi polar relax sing stocking unwrap visit workshop\", \n    \"sleigh and cheer cheer beard chimney carol decorations eat gifts grinch holiday holly jingle is naughty nice nutcracker ornament of the magi polar relax sing stocking unwrap visit workshop yuletide\"\n    ]\n        \n\nfor idx, row in samples.iterrows():\n\n    if idx in skip:\n        score = scorer.get_perplexity(row.text, batch_size = 1)\n        print(f\"Skipping sample {idx} ({score:.2f})\")\n        final_text = row.text\n    else:\n        print(f\"\\nProcessing sample {idx}...\")\n        text = samples.iloc[idx].text\n        print(f\"text: {text}\")\n        words_list = text.split()\n        fixed_word = words_list[0]\n        remaining_words = words_list[1:]\n        random.shuffle(remaining_words)\n        shuffled_words = [fixed_word] + remaining_words\n        shuffled_text = ' '.join(shuffled_words)\n        print(f\"shuffled_text: {shuffled_text}\")\n        \n        # 最適化関数の呼び出し\n        simulated_annealing_optimize(shuffled_text, verbose=True)\n        \n        print(\"正常に終了しました。\")\n        \n        \n        \n    \n    scores.append(score)\n   \n    # Add to submission dataframe\n    #submission.loc[idx] = {\n    #    'id': row.id,\n     #   'text': final_text\n    #}\n    #print(\"-\" * 80)\n\n# Print summary statistics\nprint(\"\\nScore Summary:\")\n\nfor i in range(len(scores)):\n   print(f\"Sample {i} final score: {scores[i]:.2f}\")\n\nprint(f\"Submission mean score: {np.mean(scores):.2f}\")\n\n# Save to CSV\n#submission.to_csv(\"submission.csv\", index=False)\n#print(\"\\nSubmission file created!\")\n\n#submission","metadata":{"trusted":true,"execution":{"execution_failed":"2024-12-29T16:20:50.256Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"課題としては\n思うようにスコアが減少しない。\nバッチサイズの問題なのかスタートの温度の問題なのか。\n最初の文字列に依存して得られるスコアが大きく変動しそう。\n","metadata":{}},{"cell_type":"markdown","source":"以下の大きなブラックホールに吸い込まれてしまっている、どう脱出するか。もしくは知被かないかを検討する必要がある。\n\n-New best score: 223.66653284614108\n\n\nNew best text: sleigh yuletide beard carol cheer cheer chimney decorations eat gifts grinch holiday holly jingle is naughty and nice nutcracker ornament of the magi polar relax sing stocking unwrap visit workshop\n\n文章内での複数単語を一単語として計算するとよいスコアが出る可能性がある。そこでどの単語を連語として計算するかを考える必要がある。","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"import torch\n\n# デフォルトデバイスをCPUに設定\ndevice = torch.device('cpu')\n","metadata":{"trusted":true,"execution":{"execution_failed":"2024-12-29T16:20:50.256Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}